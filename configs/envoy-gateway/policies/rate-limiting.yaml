apiVersion: gateway.envoyproxy.io/v1alpha1
kind: BackendTrafficPolicy
metadata:
  name: ai-gateway-traffic-policy
  namespace: envoy-gateway-system
spec:
  targetRefs:
  - group: gateway.networking.k8s.io
    kind: Gateway
    name: ai-inference-gateway
  llmRequestCosts:
  - metadataKey: llm_input_token
    type: InputToken
  - metadataKey: llm_output_token
    type: OutputToken
  - metadataKey: llm_total_token
    type: TotalToken
  rateLimit:
    type: Global
    global:
      rules:
      # Token-based rate limiting for sklearn-iris model
      - clientSelectors:
        - headers:
          - name: "x-tenant"
            type: Exact
            value: "tenant-a"
          - name: "x-ai-eg-model"
            type: Exact
            value: "sklearn-iris"
        limit:
          requests: 1000
          unit: Hour
        cost:
          request:
            from: Number
            number: 0
          response:
            from: Metadata
            metadata:
              namespace: io.envoy.ai_gateway
              key: llm_total_token
      # Token-based rate limiting for pytorch-resnet model
      - clientSelectors:
        - headers:
          - name: "x-tenant"
            type: Exact
            value: "tenant-c"
          - name: "x-ai-eg-model"
            type: Exact
            value: "pytorch-resnet"
        limit:
          requests: 1000
          unit: Hour
        cost:
          request:
            from: Number
            number: 0
          response:
            from: Metadata
            metadata:
              namespace: io.envoy.ai_gateway
              key: llm_total_token
      # General tenant-based rate limiting
      - clientSelectors:
        - headers:
          - name: "x-tenant"
            type: Distinct
        limit:
          requests: 100
          unit: Minute
      # JWT-based rate limiting
      - clientSelectors:
        - headers:
          - name: "authorization"
            type: RegularExpression
            value: "Bearer .*"
        limit:
          requests: 500
          unit: Minute
      # Global rate limiting
      - limit:
          requests: 10000
          unit: Hour
  circuitBreaker:
    maxConnections: 100
    maxPendingRequests: 50
    maxParallelRequests: 200
    maxParallelRetries: 10
  retry:
    numRetries: 3
    retryOn:
      httpStatusCodes:
      - 500
      - 502
      - 503
      - 504
      triggers:
      - "connect-failure"
      - "refused-stream"
  timeout:
    tcp:
      connectTimeout: 10s
    http:
      requestTimeout: 60s
      connectionIdleTimeout: 300s
  healthCheck:
    active:
      timeout: 1s
      interval: 3s
      unhealthyThreshold: 3
      healthyThreshold: 2
      type: HTTP
      http:
        path: "/health"
        method: GET
        expectedStatuses:
        - 200
        - 201