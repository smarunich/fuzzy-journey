apiVersion: gateway.envoyproxy.io/v1alpha1
kind: SecurityPolicy
metadata:
  name: ai-gateway-security
  namespace: envoy-gateway-system
spec:
  targetRefs:
  - group: gateway.networking.k8s.io
    kind: Gateway
    name: ai-inference-gateway
    namespace: envoy-gateway-system
  jwt:
    providers:
    - name: tenant-a-jwt
      issuer: "inference-in-a-box"
      audiences:
      - "tenant-a"
      remoteJWKS:
        uri: "http://jwt-server.default.svc.cluster.local:8080/.well-known/jwks.json"
        timeout: 5s
        cacheDuration: 300s
      claimToHeaders:
      - claim: "tenant"
        header: "x-tenant"
      - claim: "sub"
        header: "x-user"
    - name: tenant-b-jwt
      issuer: "inference-in-a-box"
      audiences:
      - "tenant-b"
      remoteJWKS:
        uri: "http://jwt-server.default.svc.cluster.local:8080/.well-known/jwks.json"
        timeout: 5s
        cacheDuration: 300s
      claimToHeaders:
      - claim: "tenant"
        header: "x-tenant"
      - claim: "sub"
        header: "x-user"
    - name: tenant-c-jwt
      issuer: "inference-in-a-box"
      audiences:
      - "tenant-c"
      remoteJWKS:
        uri: "http://jwt-server.default.svc.cluster.local:8080/.well-known/jwks.json"
        timeout: 5s
        cacheDuration: 300s
      claimToHeaders:
      - claim: "tenant"
        header: "x-tenant"
      - claim: "sub"
        header: "x-user"
  cors:
    allowOrigins:
    - "*"
    allowMethods:
    - GET
    - POST
    - PUT
    - DELETE
    - OPTIONS
    allowHeaders:
    - "*"
    exposeHeaders:
    - "*"
    maxAge: 86400
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: BackendTLSPolicy
metadata:
  name: ai-gateway-tls
  namespace: envoy-gateway-system
spec:
  targetRefs:
  - group: gateway.networking.k8s.io
    kind: HTTPRoute
    name: ai-inference-routes
    namespace: envoy-gateway-system
  validation:
    caCertificateRefs:
    - name: ai-gateway-ca
      kind: ConfigMap
    hostname: "*.cluster.local"