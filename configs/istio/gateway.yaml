apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: inference-gateway
  namespace: istio-system
  labels:
    app: istio-ingressgateway
    tier: service-mesh
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"
  - port:
      number: 443
      name: https
      protocol: HTTPS
    hosts:
    - "*"
    tls:
      mode: SIMPLE
      credentialName: inference-gateway-tls
---
# Service mesh internal routing for KServe models
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: kserve-model-routes
  namespace: istio-system
  labels:
    tier: service-mesh
spec:
  hosts:
  - "*"
  gateways:
  - inference-gateway
  http:
  # Direct model serving routes (internal from AI Gateway)
  - match:
    - uri:
        prefix: "/v1/models/sklearn-iris"
      headers:
        x-forwarded-by:
          exact: "ai-gateway"
    route:
    - destination:
        host: sklearn-iris-predictor-default.tenant-a.svc.cluster.local
        port:
          number: 80
      headers:
        request:
          add:
            x-served-by: "istio-gateway"
  - match:
    - uri:
        prefix: "/v1/models/pytorch-resnet"
      headers:
        x-forwarded-by:
          exact: "ai-gateway"
    route:
    - destination:
        host: pytorch-resnet-predictor-default.tenant-c.svc.cluster.local
        port:
          number: 80
      headers:
        request:
          add:
            x-served-by: "istio-gateway"
  # Fallback for any other traffic (monitoring, health checks, etc.)
  - match:
    - uri:
        prefix: "/"
    route:
    - destination:
        host: default-backend.default.svc.cluster.local
        port:
          number: 80
      headers:
        request:
          add:
            x-served-by: "istio-gateway"
