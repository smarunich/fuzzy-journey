# Namespace for Envoy AI Gateway
apiVersion: v1
kind: Namespace
metadata:
  name: envoy-ai-gateway
  labels:
    istio-injection: enabled

---
# CRDs for Envoy AI Gateway
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: aiapplications.ai.gateway.envoyproxy.io
spec:
  group: ai.gateway.envoyproxy.io
  names:
    kind: AIApplication
    listKind: AIApplicationList
    plural: aiapplications
    singular: aiapplication
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                auth:
                  type: object
                  properties:
                    jwt:
                      type: object
                      properties:
                        providers:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                              issuer:
                                type: string
                              audiences:
                                type: array
                                items:
                                  type: string
                              jwksUri:
                                type: string
                            required:
                              - name
                routes:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      prefix:
                        type: string
                      models:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            prefix:
                              type: string
                            host:
                              type: string
                            port:
                              type: integer
                            protocol:
                              type: string
                              enum: ["http", "grpc"]
                            default:
                              type: boolean
                            timeout:
                              type: string
                          required:
                            - name
                            - host
                    required:
                      - name
                      - prefix
            status:
              type: object
              properties:
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string

---
# Install Envoy AI Gateway Operator
apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoy-ai-gateway-operator
  namespace: envoy-ai-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: envoy-ai-gateway-operator
  template:
    metadata:
      labels:
        app: envoy-ai-gateway-operator
    spec:
      serviceAccountName: envoy-ai-gateway-operator
      containers:
      - name: operator
        image: envoyproxy/gateway-dev:latest
        args: ["operator", "--log-level", "info"]
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi

---
# Service account for the operator
apiVersion: v1
kind: ServiceAccount
metadata:
  name: envoy-ai-gateway-operator
  namespace: envoy-ai-gateway

---
# ClusterRole for the operator
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: envoy-ai-gateway-operator
rules:
- apiGroups: [""]
  resources: ["namespaces", "services", "secrets", "configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["ai.gateway.envoyproxy.io"]
  resources: ["aiapplications"]
  verbs: ["get", "list", "watch", "update", "patch"]

---
# ClusterRoleBinding for the operator
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: envoy-ai-gateway-operator
subjects:
- kind: ServiceAccount
  name: envoy-ai-gateway-operator
  namespace: envoy-ai-gateway
roleRef:
  kind: ClusterRole
  name: envoy-ai-gateway-operator
  apiGroup: rbac.authorization.k8s.io

---
# Install Envoy AI Gateway Instance
apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoy-ai-gateway
  namespace: envoy-ai-gateway
spec:
  replicas: 2
  selector:
    matchLabels:
      app: envoy-ai-gateway
  template:
    metadata:
      labels:
        app: envoy-ai-gateway
    spec:
      containers:
      - name: gateway
        image: envoyproxy/gateway-dev:latest
        args: ["gateway", "--log-level", "info"]
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8443
          name: https
        - containerPort: 8001
          name: admin
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 1Gi

---
# Service for the AI Gateway
apiVersion: v1
kind: Service
metadata:
  name: envoy-ai-gateway
  namespace: envoy-ai-gateway
spec:
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: envoy-ai-gateway

---
# AIApplication for our models
apiVersion: ai.gateway.envoyproxy.io/v1alpha1
kind: AIApplication
metadata:
  name: ml-models
  namespace: envoy-ai-gateway
spec:
  auth:
    jwt:
      providers:
      - name: tenant-a-auth
        issuer: "inference-in-a-box"
        audiences: ["tenant-a"]
        jwksUri: "http://jwt-server.istio-system.svc.cluster.local:8080/jwks"
      - name: tenant-b-auth
        issuer: "inference-in-a-box"
        audiences: ["tenant-b"]
        jwksUri: "http://jwt-server.istio-system.svc.cluster.local:8080/jwks"
      - name: tenant-c-auth
        issuer: "inference-in-a-box"
        audiences: ["tenant-c"]
        jwksUri: "http://jwt-server.istio-system.svc.cluster.local:8080/jwks"
  routes:
  - name: sklearn-iris-route
    prefix: "/v2/models/sklearn-iris"
    models:
    - name: sklearn-iris
      host: sklearn-iris-predictor-default.tenant-a.svc.cluster.local
      port: 80
      protocol: http
      default: true
      timeout: "30s"
    auth:
      required: true
      provider: tenant-a-auth
  - name: tensorflow-mnist-route
    prefix: "/v2/models/tensorflow-mnist"
    models:
    - name: tensorflow-mnist
      host: tensorflow-mnist-predictor-default.tenant-b.svc.cluster.local
      port: 80
      protocol: http
      default: true
      timeout: "30s"
    auth:
      required: true
      provider: tenant-b-auth
  - name: pytorch-resnet-route
    prefix: "/v2/models/pytorch-resnet"
    models:
    - name: pytorch-resnet
      host: pytorch-resnet-predictor-default.tenant-c.svc.cluster.local
      port: 80
      protocol: http
      default: true
      timeout: "30s"
    auth:
      required: true
      provider: tenant-c-auth
